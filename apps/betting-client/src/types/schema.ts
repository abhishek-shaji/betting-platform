/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/event": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all events */
        get: operations["EventController_getEvents"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/bet": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all bets for user */
        get: operations["BetController_getBets"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/bet/{outcomeId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Place a bet */
        post: operations["BetController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/sport": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all sports */
        get: operations["SportsController_getSports"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Outcome: {
            /**
             * @description The unique identifier of the outcome
             * @example 1
             */
            id: number;
            /**
             * @description The name of the outcome
             * @example Real Madrid
             */
            name: string;
            /**
             * @description The odds of the outcome
             * @example 2.3
             */
            odds: number;
        };
        Event: {
            /**
             * @description The unique identifier of the event
             * @example 1
             */
            id: number;
            /**
             * @description The name of the event
             * @example Olympic France vs Olympic Egypt
             */
            name: string;
            /**
             * Format: date-time
             * @description The start time of the event
             * @example 2024-08-07T12:55:08.169Z
             */
            startTime: string;
            outcomes: components["schemas"]["Outcome"][];
            /**
             * @description The unique identifier of the sport
             * @example 1
             */
            sportId: number;
        };
        Bet: {
            /**
             * @description The unique identifier of the sport
             * @example 1
             */
            id: number;
            /**
             * @description The amount of the bet
             * @example 100
             */
            amount: number;
            /**
             * Format: date-time
             * @description The time the bet was placed
             * @example 2024-08-07T12:55:08.169Z
             */
            placedAt: string;
            /** @description The event the bet is placed on */
            event: components["schemas"]["Event"];
            /** @description The outcome the bet is placed on */
            outcome: components["schemas"]["Outcome"];
        };
        RequestErrorDto: {
            /**
             * @description The status code of the error
             * @example 200
             */
            statusCode: number;
            /**
             * @description Example error message
             * @example Unauthorized
             */
            message: string;
            /**
             * @description The error name
             * @example Unauthorized
             */
            error: string;
        };
        CreateBetDto: {
            /**
             * @description The amount of the bet
             * @example 100
             */
            amount: number;
        };
        Sport: {
            /**
             * @description The unique identifier of the sport
             * @example 1
             */
            id: number;
            /**
             * @description The name of the sport
             * @example 1
             */
            name: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    EventController_getEvents: {
        parameters: {
            query?: {
                sportId?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Return all events */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Event"][];
                };
            };
        };
    };
    BetController_getBets: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Return all bets for user */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Bet"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RequestErrorDto"];
                };
            };
        };
    };
    BetController_create: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The unique identifier of the outcome */
                outcomeId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateBetDto"];
            };
        };
        responses: {
            /** @description Return the bet */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Bet"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RequestErrorDto"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RequestErrorDto"];
                };
            };
        };
    };
    SportsController_getSports: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Return all sports */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Sport"][];
                };
            };
        };
    };
}
